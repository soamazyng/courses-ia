#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Script para testar a an√°lise de mercado com agentes e tarefas din√¢micas
que aceitam a vari√°vel {sector} para analisar qualquer setor
"""

from dotenv import load_dotenv, find_dotenv
from crewai import Agent, Task, Crew
from IPython.display import Markdown, display

# Carregar vari√°veis de ambiente
load_dotenv(find_dotenv())

def criar_agentes(sector):
    """Criar os tr√™s agentes para an√°lise de mercado com foco no setor espec√≠fico"""
    
    # 1. Pesquisador de Mercado
    pesquisador_mercado = Agent(
        role='Pesquisador de Mercado',
        goal=f'Coletar e organizar informa√ß√µes detalhadas sobre o mercado de {sector}, tend√™ncias, concorrentes e oportunidades',
        backstory=f'''Voc√™ √© um pesquisador de mercado experiente com mais de 10 anos de experi√™ncia. 
        Sua especialidade √© coletar dados precisos e relevantes sobre mercados, especialmente no setor de {sector}. 
        Voc√™ identifica tend√™ncias emergentes e analisa o comportamento dos consumidores neste setor espec√≠fico. 
        Voc√™ tem acesso a fontes confi√°veis e sabe como filtrar informa√ß√µes importantes sobre {sector}.''',
        verbose=True,
        allow_delegation=False
    )

    # 2. Analista de Mercado
    analista_mercado = Agent(
        role='Analista de Mercado',
        goal=f'Analisar dados de mercado do setor de {sector}, identificar insights estrat√©gicos e fornecer recomenda√ß√µes baseadas em evid√™ncias',
        backstory=f'''Voc√™ √© um analista de mercado s√™nior com forma√ß√£o em economia e estat√≠stica. 
        Sua expertise inclui an√°lise de dados do setor de {sector}, modelagem preditiva e interpreta√ß√£o de indicadores 
        econ√¥micos espec√≠ficos deste mercado. Voc√™ transforma dados complexos em insights acion√°veis e estrat√©gias de neg√≥cio 
        focadas no setor de {sector}.''',
        verbose=True,
        allow_delegation=False
    )

    # 3. Redator
    redator = Agent(
        role='Redator Especializado',
        goal=f'Criar relat√≥rios concisos, claros e profissionais baseados nas an√°lises de mercado do setor de {sector}',
        backstory=f'''Voc√™ √© um redator experiente especializado em conte√∫do t√©cnico e relat√≥rios de neg√≥cio. 
        Sua habilidade √© transformar an√°lises complexas sobre {sector} em documentos claros e concisos. 
        Voc√™ tem experi√™ncia em comunica√ß√£o corporativa e sabe como apresentar informa√ß√µes 
        t√©cnicas sobre {sector} de forma acess√≠vel para diferentes p√∫blicos.''',
        verbose=True,
        allow_delegation=False
    )
    
    return pesquisador_mercado, analista_mercado, redator

def criar_tarefas(pesquisador_mercado, analista_mercado, redator, sector):
    """Criar as tarefas para cada agente com foco no setor espec√≠fico"""
    
    # Tarefa para o Pesquisador de Mercado
    tarefa_pesquisador = Task(
        description=f"""
        Voc√™ √© um pesquisador de mercado experiente especializado no setor de {sector}. Sua tarefa √©:
        
        1. Identificar e analisar o mercado-alvo do setor de {sector}
        2. Pesquisar concorrentes diretos e indiretos no setor de {sector}
        3. Coletar dados sobre tend√™ncias do setor de {sector}
        4. Analisar comportamento do consumidor no setor de {sector}
        5. Identificar oportunidades de mercado no setor de {sector}
        6. Coletar dados demogr√°ficos e psicogr√°ficos espec√≠ficos do setor de {sector}
        7. Pesquisar regulamenta√ß√µes espec√≠ficas do setor de {sector}
        
        Forne√ßa informa√ß√µes detalhadas e baseadas em dados reais sobre o setor de {sector}.
        """,
        agent=pesquisador_mercado,
        expected_output=f"Relat√≥rio detalhado de pesquisa de mercado do setor de {sector} com dados, concorrentes, tend√™ncias e oportunidades identificadas"
    )

    # Tarefa para o Analista de Mercado
    tarefa_analista = Task(
        description=f"""
        Voc√™ √© um analista de mercado s√™nior especializado no setor de {sector}. Sua tarefa √©:
        
        1. Analisar os dados coletados pelo pesquisador sobre o setor de {sector}
        2. Identificar insights estrat√©gicos espec√≠ficos do setor de {sector}
        3. Avaliar a viabilidade do mercado do setor de {sector}
        4. Calcular m√©tricas de mercado (TAM, SAM, SOM) para o setor de {sector}
        5. Identificar riscos e amea√ßas espec√≠ficos do setor de {sector}
        6. Analisar for√ßas competitivas (Porter's 5 Forces) no setor de {sector}
        7. Propor estrat√©gias de posicionamento para o setor de {sector}
        8. Avaliar cen√°rios futuros do mercado do setor de {sector}
        
        Base suas an√°lises em evid√™ncias e dados quantitativos espec√≠ficos do setor de {sector}.
        """,
        agent=analista_mercado,
        expected_output=f"An√°lise estrat√©gica completa do setor de {sector} com insights, m√©tricas de mercado, avalia√ß√£o de riscos e recomenda√ß√µes estrat√©gicas"
    )

    # Tarefa para o Redator
    tarefa_redator = Task(
        description=f"""
        Voc√™ √© um redator especializado em relat√≥rios de neg√≥cio do setor de {sector}. Sua tarefa √©:
        
        1. Revisar as an√°lises do pesquisador e do analista sobre o setor de {sector}
        2. Criar um relat√≥rio executivo conciso e profissional sobre o setor de {sector}
        3. Estruturar o documento de forma clara e l√≥gica sobre o setor de {sector}
        4. Incluir resumo executivo, metodologia, resultados e recomenda√ß√µes sobre {sector}
        5. Usar linguagem acess√≠vel para diferentes p√∫blicos sobre o setor de {sector}
        6. Incluir gr√°ficos e visualiza√ß√µes quando apropriado sobre {sector}
        7. Destacar pontos-chave e insights principais sobre o setor de {sector}
        8. Criar vers√£o executiva e vers√£o detalhada sobre o setor de {sector}
        
        Mantenha o foco na clareza e concis√£o sobre o setor de {sector}.
        """,
        agent=redator,
        expected_output=f"Relat√≥rio profissional de an√°lise de mercado do setor de {sector} com resumo executivo, an√°lises detalhadas e recomenda√ß√µes claras"
    )
    
    return tarefa_pesquisador, tarefa_analista, tarefa_redator

def executar_crew(sector="inteligencia artificial"):
    """Executar o Crew e retornar o resultado"""
    
    print(f"üéØ Setor selecionado para an√°lise: {sector}")
    print("=" * 60)
    
    # Criar agentes e tarefas
    pesquisador_mercado, analista_mercado, redator = criar_agentes(sector)
    tarefa_pesquisador, tarefa_analista, tarefa_redator = criar_tarefas(
        pesquisador_mercado, analista_mercado, redator, sector
    )
    
    # Criar o Crew
    crew = Crew(
        agents=[pesquisador_mercado, analista_mercado, redator],
        tasks=[tarefa_pesquisador, tarefa_analista, tarefa_redator],
        verbose=True
    )
    
    print(f"üöÄ Iniciando an√°lise de mercado para o setor: {sector}")
    print("üìã Agentes configurados:")
    print("   - Pesquisador de Mercado")
    print("   - Analista de Mercado")
    print("   - Redator Especializado")
    print("\n‚è≥ Executando Crew...")
    
    # Executar o Crew
    resultado_analise = crew.kickoff()
    
    print("\n‚úÖ An√°lise conclu√≠da com sucesso!")
    print(f"üìä Resultado armazenado na vari√°vel 'resultado_analise'")
    print(f"üìÑ Tamanho do resultado: {len(str(resultado_analise))} caracteres")
    
    return resultado_analise

def exibir_resultado_markdown(resultado_analise):
    """Exibir o resultado em formato Markdown"""
    
    print("üìã RESULTADO DA AN√ÅLISE DE MERCADO")
    print("=" * 50)
    
    # Extrair o texto do resultado do Crew
    if hasattr(resultado_analise, 'raw'):
        texto_resultado = resultado_analise.raw
    else:
        texto_resultado = str(resultado_analise)
    
    # Exibir em formato Markdown
    markdown_result = Markdown(texto_resultado)
    display(markdown_result)
    
    print("\nüìÑ RESULTADO COMO TEXTO SIMPLES:")
    print("=" * 50)
    print(texto_resultado)

def testar_diferentes_setores():
    """Testar a an√°lise com diferentes setores"""
    
    setores = [
        "inteligencia artificial",
        "energia renovavel",
        "fintech",
        "e-commerce",
        "saude digital"
    ]
    
    print("üß™ TESTANDO DIFERENTES SETORES")
    print("=" * 60)
    
    for i, sector in enumerate(setores, 1):
        print(f"\nüîç Teste {i}/5: Analisando setor '{sector}'")
        print("-" * 40)
        
        try:
            resultado = executar_crew(sector)
            print(f"‚úÖ An√°lise do setor '{sector}' conclu√≠da com sucesso!")
            print(f"üìä Tamanho do resultado: {len(str(resultado))} caracteres")
        except Exception as e:
            print(f"‚ùå Erro na an√°lise do setor '{sector}': {e}")
        
        print("\n" + "="*60)

if __name__ == "__main__":
    # Testar com um setor espec√≠fico
    print("üéØ AN√ÅLISE DE MERCADO DIN√ÇMICA")
    print("=" * 60)
    
    # Voc√™ pode alterar o setor aqui
    sector_teste = "inteligencia artificial"
    
    # Executar a an√°lise
    resultado = executar_crew(sector_teste)
    
    # Exibir o resultado em formato Markdown
    exibir_resultado_markdown(resultado)
    
    # Descomente a linha abaixo para testar m√∫ltiplos setores
    # testar_diferentes_setores() 